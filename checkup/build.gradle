plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'maven-publish'
}

android {
    compileSdk 32
    namespace = "com.straiberry.android.checkup"
    defaultConfig {
        minSdk 21
        targetSdk 32
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        mlModelBinding true
    }

    androidResources {
        noCompress 'lite'
    }
}

dependencies {

    def core_ktx_version = "1.7.0"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    def appcompat_version = "1.4.1"
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    def material_version = "1.5.0"
    implementation "com.google.android.material:material:$material_version"

    def constraint_layout_version = "2.1.3"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def okhttp3_version = '5.0.0-alpha.6'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"

    def gson_version = '2.9.0'
    implementation "com.google.code.gson:gson:$gson_version"

    def coil_version = "1.4.0"
    implementation "io.coil-kt:coil:$coil_version"

    def coroutines_version = "1.6.0-native-mt"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    def lifecycle_version = '2.5.0-alpha05'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt  "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    def koin_version = "3.2.0-beta-1"
    implementation "io.insert-koin:koin-android:$koin_version"

    def fragment_ktx_version = '1.5.0-alpha04'
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_ktx_version"

    def cameraX_version = "1.1.0-beta02"
    implementation "androidx.camera:camera-core:$cameraX_version"
    implementation "androidx.camera:camera-camera2:$cameraX_version"
    implementation "androidx.camera:camera-lifecycle:$cameraX_version"
    implementation "androidx.camera:camera-view:$cameraX_version"

    def tenser_flow_version = "2.8.0"
    def tensor_flow_support_version = '0.3.1'
    implementation "org.tensorflow:tensorflow-lite:$tenser_flow_version"
    implementation "org.tensorflow:tensorflow-lite-gpu:$tenser_flow_version"
    implementation "org.tensorflow:tensorflow-lite-support:$tensor_flow_support_version"
    implementation "org.tensorflow:tensorflow-lite-metadata:$tensor_flow_support_version"

    def preference_version = "1.2.0"
    implementation "androidx.preference:preference-ktx:$preference_version"

    def image_cropper_version = "3.2.2"
    implementation "com.github.CanHub:Android-Image-Cropper:$image_cropper_version"

    def lottie_version = "5.0.3"
    implementation "com.airbnb.android:lottie:$lottie_version"

    def opencv_version = "4.5.3.0"
    implementation "com.quickbirdstudios:opencv:$opencv_version"

    def paper_version = "2.7.1"
    implementation "io.paperdb:paperdb:$paper_version"

    def nav_version = "2.5.0-alpha03"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"

    def swipe_refresh_layout_version = "1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_layout_version"

    implementation(project(':common'))

    implementation "junit:junit:4.13.2"
    implementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "io.mockk:mockk:1.12.3"
    implementation "androidx.test:rules:1.4.0"
    implementation "androidx.test:runner:1.4.0"
    implementation 'androidx.test.ext:junit:1.1.4-alpha05'
    implementation "androidx.test.espresso:espresso-core:3.4.0"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}